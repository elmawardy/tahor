// Code generated by goa v3.2.3, DO NOT EDIT.
//
// cases client
//
// Command:
// $ goa gen github.com/elmawardy/tahor/cases/design

package cases

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "cases" service client.
type Client struct {
	GetEndpoint goa.Endpoint
	AddEndpoint goa.Endpoint
}

// NewClient initializes a "cases" service client given the endpoints.
func NewClient(get, add goa.Endpoint) *Client {
	return &Client{
		GetEndpoint: get,
		AddEndpoint: add,
	}
}

// Get calls the "get" endpoint of the "cases" service.
// Get may return the following errors:
//	- "invalid-scopes" (type InvalidScopes)
//	- error: internal error
func (c *Client) Get(ctx context.Context, p *GetPayload) (res []*GetResponse, err error) {
	var ires interface{}
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*GetResponse), nil
}

// Add calls the "add" endpoint of the "cases" service.
func (c *Client) Add(ctx context.Context, p *AddPayload) (res *AddResponse, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AddResponse), nil
}
