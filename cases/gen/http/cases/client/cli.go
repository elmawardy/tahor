// Code generated by goa v3.2.3, DO NOT EDIT.
//
// cases HTTP client CLI support package
//
// Command:
// $ goa gen github.com/elmawardy/tahor/cases/design

package client

import (
	"encoding/json"
	"fmt"

	cases "github.com/elmawardy/tahor/cases/gen/cases"
)

// BuildAddPayload builds the payload for the cases add endpoint from CLI flags.
func BuildAddPayload(casesAddBody string) (*cases.AddPayload, error) {
	var err error
	var body AddRequestBody
	{
		err = json.Unmarshal([]byte(casesAddBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"collected\": 0.8091384557987812,\n      \"currency\": \"Autem qui aperiam aut.\",\n      \"desc\": \"Expedita accusamus totam tempore.\",\n      \"tags\": [\n         \"Cupiditate qui quo veritatis est.\",\n         \"Accusantium sed voluptas ut qui.\"\n      ],\n      \"target\": 0.5160925211499976\n   }'")
		}
	}
	v := &cases.AddPayload{
		Desc:      body.Desc,
		Target:    body.Target,
		Collected: body.Collected,
		Currency:  body.Currency,
	}
	if body.Tags != nil {
		v.Tags = make([]string, len(body.Tags))
		for i, val := range body.Tags {
			v.Tags[i] = val
		}
	}

	return v, nil
}
