// Code generated by goa v3.2.4, DO NOT EDIT.
//
// admin HTTP client CLI support package
//
// Command:
// $ goa gen github.com/elmawardy/tahor/admin/design

package client

import (
	"encoding/json"
	"fmt"

	admin "github.com/elmawardy/tahor/admin/gen/admin"
)

// BuildAddcasePayload builds the payload for the admin addcase endpoint from
// CLI flags.
func BuildAddcasePayload(adminAddcaseBody string, adminAddcaseJWT string) (*admin.AddcasePayload, error) {
	var err error
	var body AddcaseRequestBody
	{
		err = json.Unmarshal([]byte(adminAddcaseBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"collected\": 0.6763083345048223,\n      \"currency\": \"Possimus quidem aut cumque qui commodi.\",\n      \"desc\": \"Iure repellendus.\",\n      \"tags\": [\n         \"Soluta dolor ut.\",\n         \"Molestiae non consectetur ut quam.\",\n         \"Enim dolor culpa eum ullam.\",\n         \"Vel ex vero.\"\n      ],\n      \"target\": 0.24574395491977002\n   }'")
		}
	}
	var jwt *string
	{
		if adminAddcaseJWT != "" {
			jwt = &adminAddcaseJWT
		}
	}
	v := &admin.AddcasePayload{
		Desc:      body.Desc,
		Target:    body.Target,
		Collected: body.Collected,
		Currency:  body.Currency,
	}
	if body.Tags != nil {
		v.Tags = make([]string, len(body.Tags))
		for i, val := range body.Tags {
			v.Tags[i] = val
		}
	}
	v.JWT = jwt

	return v, nil
}
