// Code generated by goa v3.2.4, DO NOT EDIT.
//
// admin HTTP server types
//
// Command:
// $ goa gen github.com/elmawardy/tahor/admin/design

package server

import (
	admin "github.com/elmawardy/tahor/admin/gen/admin"
	goa "goa.design/goa/v3/pkg"
)

// AddcaseRequestBody is the type of the "admin" service "addcase" endpoint
// HTTP request body.
type AddcaseRequestBody struct {
	// Case Description
	Desc *string `form:"desc,omitempty" json:"desc,omitempty" xml:"desc,omitempty"`
	// Target Quantity
	Target *float64 `form:"target,omitempty" json:"target,omitempty" xml:"target,omitempty"`
	// Collected Quantity
	Collected *float64 `form:"collected,omitempty" json:"collected,omitempty" xml:"collected,omitempty"`
	// Currency
	Currency *string `form:"currency,omitempty" json:"currency,omitempty" xml:"currency,omitempty"`
	// Tags array
	Tags []string `form:"tags,omitempty" json:"tags,omitempty" xml:"tags,omitempty"`
}

// NewAddcasePayload builds a admin service addcase endpoint payload.
func NewAddcasePayload(body *AddcaseRequestBody, jwt *string) *admin.AddcasePayload {
	v := &admin.AddcasePayload{
		Desc:      *body.Desc,
		Target:    *body.Target,
		Collected: *body.Collected,
		Currency:  *body.Currency,
	}
	if body.Tags != nil {
		v.Tags = make([]string, len(body.Tags))
		for i, val := range body.Tags {
			v.Tags[i] = val
		}
	}
	v.JWT = jwt

	return v
}

// ValidateAddcaseRequestBody runs the validations defined on AddcaseRequestBody
func ValidateAddcaseRequestBody(body *AddcaseRequestBody) (err error) {
	if body.Desc == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("desc", "body"))
	}
	if body.Target == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("target", "body"))
	}
	if body.Collected == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("collected", "body"))
	}
	if body.Currency == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("currency", "body"))
	}
	return
}
